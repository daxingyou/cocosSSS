{"version":3,"sources":["Replay.js"],"names":["cc","Class","extends","Component","seat","properties","right","default","type","Node","up","left","bottom","self_cur_card_prefab","Prefab","self_out_card_prefab","self_peng_prefab","self_out_card_big_prefab","left_cur_card_prefab","left_peng_prefab","left_out_card_prefab","left_out_card_big_prefab","up_peng_gang_prefab","up_cur_card_prefab","up_out_card_prefab","up_out_card_big_prefab","right_peng_gang_prefab","right_cur_card_prefab","right_out_card_prefab","right_out_card_big_prefab","self_turn","left_turn","up_turn","right_turn","ani_hua_prefab","ani_kaijin_prefab","header_prefab","event_handler_prefab","jin_card","ani_event_prefab","hua_show_prefab","label_progress","Label","findNode","dir","name","node_names","split","node","dir_dict","i","length","getChildByName","randomInit","peng_pang_num","parseInt","Math","random","active","peng","instantiate","peng_prefab_dict","getComponent","init","parent","cur_card_prefab_dict","card_script","self_new_card","out_cards_num","out_card_prefab_dict","cards_arr","push","value","j","idx","out_cards_pathis","refreshRightOutCard","data","right_out_cards","last_discard","JSON","parse","stringify","out_panel","node_out_cards","_children","removeAllChildren","num","card","out_card","last_out_card","start_play","cs","initComponents","out_card_big_prefab_dict","turn_dict","clearAllTask","k","timer_dict","clearTimeout","runAfter","func","t","timer","setTimeout","initNode","initSelfCards","resp","roles","mj","mgr","self_seat","initCards","cards","card_len","self_cards","cur_card_prefab","laizi","new_card","initOtherCards","role","Utils","dirFromSeat","role_cards","_refreshOtherCards","parseCard","refreshOtherCards","node_cards","nodes","find","onLoad","room","mjroom","bg","user","getStyleBg","initTitle","audio","playBGM","laizi_show","ignore_animation","prepared","initEvt","initControl","goto_progress","progress","step","max","evt_idx","handleEvt","play_next","_init","evts","forward","Button","interactable","back","pause","btn_pause","btn_play","resume","on","EventType","TOUCH_START","scene","closePopWin","exit","bind","title","string","room_text","regHideShowEvent","game","EVENT_HIDE","onHide","EVENT_SHOW","onShow","step_","evt","cb","evt_cbs","action","newTurn","cur_seat","play_animation","animation_prefab","timeout","animation","animation_node","refreshSelfCards","cur_normal_old_node","cur_len","checkHua","http","sendGame","method","hua_show","openSetting","game_setting_prefab","clear","regEvt","btn_check_hua","option","TOUCH_END","banker","option_text","banker_dir","set_banker","hu_times","stop_play","event_handler_node","self","_discard","out_card_big","playCard","self_selected_card","reset","getNewCard","_components","cur_hua","rpl_cards","rpl_card","replaceCard","type0","value0","type1","value1","console","log","event_handler","event","able","rotation","seatHandleEvt","from_dir","from_seat","event_cards_node","splice","playEvent","ani_event","state","remove_num","event_card","gang","otherEvent","value2","chi","kaijin","uid","header","icon","money","card_node","Layout","spacingY","event_node","handled","cur_cards_node","replay","onDestroy","update","dt"],"mappings":"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","file":"Replay.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n    seat: null,\r\n    properties: {\r\n        right: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        up: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        left: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        bottom: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        self_cur_card_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        self_out_card_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        self_peng_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        self_out_card_big_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        left_cur_card_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        left_peng_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        left_out_card_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        left_out_card_big_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        up_peng_gang_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        up_cur_card_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        up_out_card_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        up_out_card_big_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        right_peng_gang_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        right_cur_card_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        right_out_card_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        right_out_card_big_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        self_turn: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        left_turn: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        up_turn: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        right_turn: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        ani_hua_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        ani_kaijin_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        header_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        event_handler_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        jin_card: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        ani_event_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        hua_show_prefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        label_progress: cc.Label,\r\n    },\r\n    findNode: function (dir, name) {\r\n        let node_names = name.split(\".\")\r\n        let node = this.dir_dict[dir]\r\n        for (let i = 0; i < node_names.length; i++) {\r\n            node = node.getChildByName(node_names[i])\r\n        }\r\n        return node\r\n    },\r\n    randomInit: function (dir) {\r\n        let peng_pang_num = parseInt(Math.random() * 5)\r\n        if (!peng_pang_num) {\r\n            this.findNode(dir, \"cur.event\").active = false\r\n        }\r\n        for (let i = 0; i < peng_pang_num; i++) {\r\n            let peng = cc.instantiate(this.peng_prefab_dict[dir])\r\n            peng.getComponent(\"EventCard\").init(dir, parseInt(Math.random() * 3 + 1), parseInt(Math.random() * 9 + 1))\r\n            peng.parent = this.findNode(dir, \"cur.event\")\r\n        }\r\n        for (let i = 0; i < 17 - peng_pang_num * 3 - 1; i++) {\r\n            let self_cur_card_prefab = cc.instantiate(this.cur_card_prefab_dict[dir]);\r\n            let card_script = self_cur_card_prefab.getComponent(\"CurCard\")\r\n            if (card_script) {\r\n                card_script.init(this.dir, parseInt(Math.random() * 3 + 1), parseInt(Math.random() * 9 + 1))\r\n            }\r\n            self_cur_card_prefab.parent = this.findNode(dir, \"cur.normal.old\")\r\n        }\r\n\r\n        let self_new_card = cc.instantiate(this.cur_card_prefab_dict[dir]);\r\n        self_new_card.parent = this.findNode(dir, \"cur.normal.new\")\r\n\r\n        let out_cards_num = parseInt(Math.random() * 12 + 2)\r\n        if (dir != 1) {\r\n            for (let i = 0; i < out_cards_num; i++) {\r\n                let self_cur_card_prefab = cc.instantiate(this.out_card_prefab_dict[dir]);\r\n                let card_script = self_cur_card_prefab.getComponent(\"OutCard\")\r\n                if (card_script) {\r\n                    card_script.init(dir, parseInt(Math.random() * 3 + 1), parseInt(Math.random() * 9 + 1))\r\n                }\r\n                self_cur_card_prefab.parent = this.findNode(dir, \"out\")\r\n            }\r\n        } else {\r\n            let cards_arr = []\r\n            for (let i = 0; i < out_cards_num; i++) {\r\n                cards_arr.push({ type: parseInt(Math.random() * 3 + 1), value: parseInt(Math.random() * 9 + 1) })\r\n            }\r\n            out_cards_num = parseInt(out_cards_num / 10 + 1) * 10\r\n            for (let i = cards_arr.length; i < out_cards_num; i++) {\r\n                cards_arr.push({ type: null, value: null })\r\n            }\r\n            for (let i = 0; i < parseInt(out_cards_num / 10); i++) {\r\n                for (let j = 9; j >= 0; j--) {\r\n                    let self_cur_card_prefab = cc.instantiate(this.out_card_prefab_dict[dir]);\r\n                    let card_script = self_cur_card_prefab.getComponent(\"OutCard\")\r\n                    let idx = i * 10 + j\r\n                    if (card_script) {\r\n                        card_script.init(dir, cards_arr[idx].type, cards_arr[idx].value)\r\n                    }\r\n                    self_cur_card_prefab.parent = this.out_cards_pathis.findNode(dir, \"out\")\r\n                }\r\n            }\r\n        }\r\n\r\n    },\r\n    refreshRightOutCard: function (data) {\r\n        for (let i = 0; i < this.right_out_cards.length; i++) {\r\n            this.right_out_cards[i].last_discard = false\r\n        }\r\n        data.last_discard = true\r\n        this.right_out_cards.push(data)\r\n        let dir = 1\r\n        let cards_arr = JSON.parse(JSON.stringify(this.right_out_cards))\r\n        let out_cards_num = cards_arr.length\r\n        out_cards_num = parseInt(out_cards_num / 10 + 1) * 10\r\n        for (let i = cards_arr.length; i < out_cards_num; i++) {\r\n            cards_arr.push({ type: null, value: null })\r\n        }\r\n        let out_panel = this.findNode(dir, \"out\")\r\n        let node_out_cards = []\r\n        for (let i = 0; i < out_panel._children.length; i++) {\r\n            node_out_cards.push(out_panel._children[i])\r\n        }\r\n        out_panel.removeAllChildren()\r\n        // cc.log(node_out_cards)\r\n\r\n        let num = 0\r\n        for (let i = 0; i < parseInt(out_cards_num / 10); i++) {\r\n            for (let j = 9; j >= 0; j--) {\r\n                num += 1\r\n                let idx = i * 10 + j\r\n                let card = cards_arr[idx]\r\n                let out_card = null\r\n                if (card.last_discard) {\r\n                    out_card = this.last_out_card\r\n                    out_card.getComponent(\"OutCard\").start_play()\r\n                } else {\r\n                    if (num <= node_out_cards.length) {\r\n                        out_card = node_out_cards[num - 1]\r\n                    } else {\r\n                        out_card = cc.instantiate(this.out_card_prefab_dict[dir]);\r\n                    }\r\n                    let cs = out_card.getComponent(\"OutCard\")\r\n                    cs.init(dir, card.type, card.value)\r\n                }\r\n                out_card.parent = out_panel\r\n            }\r\n        }\r\n    },\r\n    initComponents: function () {\r\n        this.dir_dict = {\r\n            1: this.right,\r\n            2: this.up,\r\n            3: this.left,\r\n            4: this.bottom\r\n        }\r\n        this.peng_prefab_dict = {\r\n            1: this.right_peng_gang_prefab,\r\n            2: this.up_peng_gang_prefab,\r\n            3: this.left_peng_prefab,\r\n            4: this.self_peng_prefab\r\n        }\r\n        this.cur_card_prefab_dict = {\r\n            1: this.right_cur_card_prefab,\r\n            2: this.up_cur_card_prefab,\r\n            3: this.left_cur_card_prefab,\r\n            4: this.self_cur_card_prefab\r\n        }\r\n        this.out_card_prefab_dict = {\r\n            1: this.right_out_card_prefab,\r\n            2: this.up_out_card_prefab,\r\n            3: this.left_out_card_prefab,\r\n            4: this.self_out_card_prefab,\r\n        }\r\n        this.out_card_big_prefab_dict = {\r\n            1: this.right_out_card_big_prefab,\r\n            2: this.up_out_card_big_prefab,\r\n            3: this.left_out_card_big_prefab,\r\n            4: this.self_out_card_big_prefab,\r\n        }\r\n        this.turn_dict = {\r\n            1: this.right_turn,\r\n            2: this.up_turn,\r\n            3: this.left_turn,\r\n            4: this.self_turn\r\n        }\r\n    },\r\n    clearAllTask: function () {\r\n        for (let k in this.timer_dict) {\r\n            clearTimeout(k)\r\n        }\r\n        this.timer_dict = {}\r\n    },\r\n    runAfter: function (func, t) {\r\n        if (!t) {\r\n            func()\r\n            return null\r\n        }\r\n        else {\r\n            let timer = setTimeout(func, t)\r\n            this.timer_dict[timer] = func\r\n            return timer\r\n        }\r\n\r\n    },\r\n    initNode: function (dir) {\r\n        this.findNode(dir, \"cur.event\").removeAllChildren()\r\n        this.findNode(dir, \"out\").removeAllChildren()\r\n        this.findNode(dir, \"cur.normal.old\").removeAllChildren()\r\n        this.findNode(dir, \"cur.normal.new\").removeAllChildren()\r\n        this.findNode(dir, \"hua\").active = false\r\n        this.findNode(dir, \"cur.event\").active = false\r\n        this.findNode(dir, \"out_big\").removeAllChildren()\r\n        this.findNode(dir, \"event_handler\").removeAllChildren()\r\n        this.findNode(dir, \"ani_event\").removeAllChildren()\r\n    },\r\n    // use this for initialization\r\n    initSelfCards: function (resp) {\r\n        this.initNode(this.dir)\r\n\r\n        for (let i = 0; i < resp.roles.length; i++) {\r\n            if (resp.roles[i].seat == cc.mj.mgr.self_seat) {\r\n                cc.mj.mgr.initCards(resp.roles[i].cards)\r\n                break\r\n            }\r\n        }\r\n        let card_len = cc.mj.mgr.self_cards.length\r\n        for (let i = 0; i < card_len; i++) {\r\n            let card = cc.mj.mgr.self_cards[i]\r\n            let cur_card_prefab = cc.instantiate(this.cur_card_prefab_dict[this.dir]);\r\n            cur_card_prefab.getComponent(\"CurCard\").init(this.dir, card.type, card.value, card.laizi, this)\r\n            cur_card_prefab.parent = this.findNode(this.dir, \"cur.normal.old\")\r\n        }\r\n        if (cc.mj.mgr.new_card) {\r\n            let card = cc.mj.mgr.new_card\r\n            let new_card = cc.instantiate(this.cur_card_prefab_dict[this.dir]);\r\n            new_card.getComponent(\"CurCard\").init(this.dir, card.type, card.value, card.laizi, this)\r\n            new_card.parent = this.findNode(this.dir, \"cur.normal.new\")\r\n        }\r\n\r\n    },\r\n    initOtherCards: function (resp) {\r\n        for (let i = 0; i < resp.roles.length; i++) {\r\n            let role = resp.roles[i]\r\n            if (role.seat == cc.mj.mgr.self_seat) {\r\n                continue\r\n            }\r\n            let dir = Utils.dirFromSeat(role.seat)\r\n            this.initNode(dir)\r\n            let role_cards = role.cards\r\n            this.findNode(dir, \"cur.event\").active = false\r\n            this._refreshOtherCards(dir, role_cards)\r\n        }\r\n    },\r\n    _refreshOtherCards: function (dir, cards) {\r\n        if (dir != 1) {\r\n            for (let i = 0; i < cards.length; i++) {\r\n                let card = Utils.parseCard(cards[i])\r\n                let cur_card_prefab = cc.instantiate(this.cur_card_prefab_dict[dir]);\r\n                cur_card_prefab.getComponent(\"CurCard\").init(dir, card.type, card.value, card.laizi)\r\n                cur_card_prefab.parent = this.findNode(dir, \"cur.normal.old\")\r\n            }\r\n        } else {\r\n            for (let i = cards.length - 1; i >= 0; i--) {\r\n                let card = Utils.parseCard(cards[i])\r\n                let cur_card_prefab = cc.instantiate(this.cur_card_prefab_dict[dir]);\r\n                cur_card_prefab.getComponent(\"CurCard\").init(dir, card.type, card.value, card.laizi)\r\n                cur_card_prefab.parent = this.findNode(dir, \"cur.normal.old\")\r\n            }\r\n        }\r\n\r\n    },\r\n    refreshOtherCards: function (dir, cards) {\r\n        let node_cards = this.findNode(dir, \"cur.normal.old\")\r\n        let nodes = node_cards._children\r\n        if (dir != 1) {\r\n            for (let i = 0; i < nodes.length; i++) {\r\n                if (i < cards.length) {\r\n                    let card = Utils.parseCard(cards[i])\r\n                    nodes[i].getComponent(\"CurCard\").init(dir, card.type, card.value, card.laizi)\r\n                    nodes[i].active = true\r\n                } else {\r\n                    nodes[i].active = false\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = nodes.length - 1; i >= 0; i--) {\r\n                let idx = nodes.length - i - 1\r\n                if (idx < cards.length) {\r\n                    let card = Utils.parseCard(cards[idx])\r\n                    nodes[i].getComponent(\"CurCard\").init(dir, card.type, card.value, card.laizi)\r\n                    nodes[i].active = true\r\n                } else {\r\n                    nodes[i].active = false\r\n                }\r\n            }\r\n        }\r\n        // } else {\r\n        //     for (let i = nodes.length - 1; i >= 0; i--) {\r\n        //         let idx = nodes.length - i\r\n        //         let card = Utils.parseCard(cards[i])\r\n        //         let cur_card_prefab = cc.instantiate(this.cur_card_prefab_dict[dir]);\r\n        //         cur_card_prefab.getComponent(\"CurCard\").init(dir, card.type, card.value, card.laizi)\r\n        //         cur_card_prefab.parent = this.findNode(dir, \"cur.normal.old\")\r\n        //     }\r\n        // }\r\n        //.removeAllChildren()\r\n        // if (dir != 1) {\r\n        //     for (let i = 0; i < cards.length; i++) {\r\n        //         let card = Utils.parseCard(cards[i])\r\n        //         let cur_card_prefab = cc.instantiate(this.cur_card_prefab_dict[dir]);\r\n        //         cur_card_prefab.getComponent(\"CurCard\").init(dir, card.type, card.value, card.laizi)\r\n        //         cur_card_prefab.parent = this.findNode(dir, \"cur.normal.old\")\r\n        //     }\r\n        // } else {\r\n        //     for (let i = cards.length - 1; i >= 0; i--) {\r\n        //         let card = Utils.parseCard(cards[i])\r\n        //         let cur_card_prefab = cc.instantiate(this.cur_card_prefab_dict[dir]);\r\n        //         cur_card_prefab.getComponent(\"CurCard\").init(dir, card.type, card.value, card.laizi)\r\n        //         cur_card_prefab.parent = this.findNode(dir, \"cur.normal.old\")\r\n        //     }\r\n        // }\r\n\r\n    },\r\n    find: function (name) {\r\n        let node_names = name.split(\"/\")\r\n        let node = this.node\r\n        for (let i = 1; i < node_names.length; i++) {\r\n            node = node.getChildByName(node_names[i])\r\n        }\r\n        return node\r\n    },\r\n    onLoad: function () {\r\n        return\r\n        this.room = cc.mjroom\r\n        this.bg = this.find(\"录像/bg_\" + cc.mj.user.getStyleBg())\r\n        this.bg.active = true\r\n        this.timer_dict = {}\r\n        this.initTitle()\r\n        cc.audio.playBGM(\"bgm1.mp3\")\r\n        this.laizi_show = this.find(\"Canvas/gaming/laizi\")\r\n        this.laizi_show.active = false\r\n        this.right_out_cards = [] //右侧出牌特殊处理\r\n        this.ignore_animation = false\r\n        this.dir = 4\r\n        this.prepared = false\r\n        this.initComponents()\r\n        this.initEvt()\r\n        this.initControl()\r\n    },\r\n    goto_progress: function (progress) {\r\n        this.clearAllTask()\r\n        this.right_out_cards = []\r\n        let step = Math.max(2, progress)\r\n        this.evt_idx = 0;\r\n        this.handleEvt(step);\r\n        this.runAfter(() => { this.play_next() }, 1500)\r\n    },\r\n    _init: function () {\r\n        this.room = cc.mjroom\r\n        this.bg = this.find(\"录像/bg_\" + cc.mj.user.getStyleBg())\r\n        this.bg.active = true\r\n        this.timer_dict = {}\r\n        this.initTitle()\r\n        cc.audio.playBGM(\"bgm1.mp3\")\r\n        this.laizi_show = this.find(\"Canvas/gaming/laizi\")\r\n        this.laizi_show.active = false\r\n        this.right_out_cards = [] //右侧出牌特殊处理\r\n        this.ignore_animation = false\r\n        this.dir = 4\r\n        this.prepared = false\r\n        this.initComponents()\r\n        this.initEvt()\r\n        this.initControl()\r\n    },\r\n    init: function (evts) {\r\n        this._init()\r\n        this.evts = evts\r\n        this.goto_progress(2)\r\n    },\r\n    forward: function () {\r\n        this.find(\"mjgame/control/forward\").getComponent(cc.Button).interactable = false\r\n        this.clearAllTask()\r\n        for (let dir = 1; dir <= 4; dir++) {\r\n            this.findNode(dir, \"out_big\").removeAllChildren()\r\n            this.findNode(dir, \"event_handler\").removeAllChildren()\r\n            this.findNode(dir, \"ani_event\").removeAllChildren()\r\n        }\r\n        this.handleEvt(~~(this.evts.length * 0.1));\r\n        this.runAfter(() => { this.play_next() }, 1500)\r\n        this.runAfter(() => {\r\n            this.find(\"mjgame/control/forward\").getComponent(cc.Button).interactable = true\r\n        }, 500)\r\n        // this.goto_progress(this.evt_idx + 5)\r\n    },\r\n    back: function () {\r\n        this.find(\"mjgame/control/back\").getComponent(cc.Button).interactable = false\r\n        this.goto_progress(this.evt_idx - 15)\r\n        this.runAfter(() => {\r\n            this.find(\"mjgame/control/back\").getComponent(cc.Button).interactable = true\r\n        }, 500)\r\n    },\r\n    pause: function () {\r\n        for (let i = 1; i <= 4; i++) this.findNode(i, \"ani_event\").removeAllChildren()\r\n        this.clearAllTask();\r\n        this.btn_pause.active = false;\r\n        this.btn_play.active = true;\r\n    },\r\n    resume: function () {\r\n        this.play_next();\r\n        this.btn_play.active = false;\r\n        this.btn_pause.active = true;\r\n    },\r\n    initControl: function () {\r\n        this.find(\"mjgame/control/exit\").on(cc.Node.EventType.TOUCH_START, () => {\r\n            cc.scene.closePopWin(this.node)\r\n            this.exit()\r\n        })\r\n        this.btn_pause = this.find(\"mjgame/control/pause\")\r\n        this.btn_play = this.find(\"mjgame/control/play\")\r\n        this.btn_pause.on(cc.Node.EventType.TOUCH_START, this.pause.bind(this))\r\n        this.btn_play.on(cc.Node.EventType.TOUCH_START, this.resume.bind(this))\r\n\r\n        // this.find(\"mjgame/control/forward\").on(cc.Node.EventType.TOUCH_START, this.forward.bind(this))\r\n        // this.find(\"mjgame/control/back\").on(cc.Node.EventType.TOUCH_START, this.back.bind(this))\r\n    },\r\n    initTitle: function () {\r\n        let title = this.bg.getChildByName(\"title\").getComponent(cc.Label)\r\n        title.string = this.room.room_text\r\n    },\r\n    regHideShowEvent: function () {\r\n        cc.game.on(cc.game.EVENT_HIDE, this.onHide, this)\r\n        cc.game.on(cc.game.EVENT_SHOW, this.onShow, this)\r\n    },\r\n    handleEvt: function (step) {\r\n        let step_ = 0\r\n        !step && (step = 1)\r\n        step > 1 && (this.ignore_animation = true)\r\n        while (step_ < step) {\r\n            if (this.evt_idx < this.evts.length) {\r\n                let evt = this.evts[this.evt_idx]\r\n                let cb = cc.mj.evt_cbs[evt.action]\r\n                if (cb) {\r\n                    cb(evt)\r\n                }\r\n                this.evt_idx += 1\r\n            }\r\n            step_ += 1\r\n        }\r\n        this.ignore_animation = false\r\n        this.label_progress.string = \"进度：\" + this.evt_idx + \" / \" + this.evts.length\r\n    },\r\n    play_next: function () {\r\n        this.timer && clearTimeout(this.timer)\r\n        this.timer = this.runAfter(this.handleEvt.bind(this), 1000)\r\n    },\r\n    newTurn: function () {\r\n        let dir = Utils.dirFromSeat(cc.mj.mgr.cur_seat)\r\n        for (let k in this.turn_dict) {\r\n            this.turn_dict[k].active = k == dir ? true : false\r\n        }\r\n    },\r\n    play_animation: function (seat, animation_prefab, timeout, cb) {\r\n        if (!this.ignore_animation) {\r\n            let dir = Utils.dirFromSeat(seat)\r\n            let animation = cc.instantiate(animation_prefab)\r\n            let animation_node = this.findNode(dir, \"ani_event\")\r\n            animation_node.removeAllChildren()\r\n            animation.parent = animation_node\r\n            this.runAfter(() => {\r\n                animation.parent = null\r\n                cb && cb()\r\n            }, timeout)\r\n        } else {\r\n            cb && cb()\r\n        }\r\n\r\n    },\r\n    refreshSelfCards: function () {\r\n        let dir = Utils.dirFromSeat(cc.mj.mgr.self_seat)\r\n        let cur_normal_old_node = this.findNode(dir, \"cur.normal.old\")\r\n        let cur_len = cur_normal_old_node._children.length\r\n        let card_len = cc.mj.mgr.self_cards.length\r\n        if (cur_len > card_len) {\r\n            let num = cur_len - card_len\r\n            while (num) {\r\n                cur_normal_old_node._children[0].parent = null\r\n                num -= 1\r\n            }\r\n        }\r\n        if (cur_normal_old_node._children.length != card_len) {\r\n            cur_normal_old_node.removeAllChildren()\r\n        }\r\n        for (let i = 0; i < card_len; i++) {\r\n            var card = null\r\n            if (i < cur_normal_old_node._children.length) {\r\n                card = cur_normal_old_node._children[i]\r\n            } else {\r\n                card = cc.instantiate(this.self_cur_card_prefab)\r\n                card.parent = cur_normal_old_node\r\n            }\r\n            let card_script = card.getComponent(\"CurCard\")\r\n            card_script.init(this.dir, cc.mj.mgr.self_cards[i].type, cc.mj.mgr.self_cards[i].value, cc.mj.mgr.self_cards[i].laizi, this)\r\n        }\r\n        if (cc.mj.mgr.new_card) {\r\n            let card_script = this.findNode(dir, \"cur.normal.new\")._children[0].getComponent(\"CurCard\")\r\n            card_script.init(this.dir, cc.mj.mgr.new_card.type, cc.mj.mgr.new_card.value, cc.mj.mgr.new_card.laizi, this)\r\n        }\r\n    },\r\n    checkHua: function () {\r\n        http.sendGame({ method: \"check_hua\" }, (resp) => {\r\n            let hua_show = cc.instantiate(this.hua_show_prefab)\r\n            hua_show.parent = this.node\r\n            let cs = hua_show.getComponent(\"RoleHuaShow\")\r\n            cs.init(resp.roles)\r\n        })\r\n    },\r\n    openSetting: function () {\r\n        let node = cc.instantiate(this.game_setting_prefab)\r\n        node.getComponent(\"Setting\").init(\"GAME\")\r\n        node.parent = this.node\r\n    },\r\n    initEvt: function () {\r\n        cc.mj.evt.clear()\r\n        // 初始化牌局\r\n        cc.mj.evt.regEvt(\"InitGame\", (data) => {\r\n            let btn_check_hua = this.find(\"Canvas/gaming/btn_check_hua\")\r\n            if (this.room.option.mj != \"fzmj\") {\r\n                btn_check_hua.active = false\r\n            } else {\r\n                !btn_check_hua.active && (btn_check_hua.active = true) && (btn_check_hua.on(cc.Node.EventType.TOUCH_END, this.checkHua.bind(this)))\r\n            }\r\n            cc.mj.mgr.cur_seat = data.banker.seat\r\n            this.initSelfCards(data)\r\n            this.initOtherCards(data)\r\n            // for (let i = 1; i <= 4; i++) {\r\n            //     this.findNode(i, \"gaming_header\").removeAllChildren()\r\n            //     this.findNode(i, \"prepare\").active = false\r\n            //     this.findNode(i, \"prepare_header\").active = false\r\n            //     this.findNode(i, \"prepare_header\")._children.length && (this.findNode(i, \"prepare_header\")._children[0].parent = this.findNode(i, \"gaming_header\"))\r\n            // }\r\n            this.find(\"Canvas/gaming/turn/option\").getComponent(cc.Label).string = this.room.option_text\r\n            this.find(\"Canvas/gaming/turn\").active = true\r\n            this.newTurn()\r\n\r\n            let banker_dir = Utils.dirFromSeat(data.banker.seat)\r\n            this.findNode(banker_dir, \"gaming_header\")._children[0].getComponent(\"Header\").set_banker(data.banker.hu_times)\r\n\r\n            !this.ignore_animation && this.play_next()\r\n        })\r\n        // 玩家出牌\r\n        cc.mj.evt.regEvt(\"UserDiscard\", (data) => {\r\n            cc.mj.mgr.cur_seat = null\r\n            this.last_out_card && this.last_out_card.getComponent(\"OutCard\").stop_play()\r\n            this.last_out_card = null\r\n\r\n            let dir = Utils.dirFromSeat(data.seat)\r\n            // 移除操作确定\r\n            let event_handler_node = this.findNode(this.dir, \"event_handler\")\r\n            event_handler_node.removeAllChildren()\r\n\r\n            let self = this\r\n            let _discard = (dir, data) => {\r\n                if (!this.last_out_card) return\r\n                if (dir != 1) {\r\n                    this.last_out_card.parent = self.findNode(dir, \"out\")\r\n                    this.last_out_card.getComponent(\"OutCard\").start_play()\r\n                } else {\r\n                    this.refreshRightOutCard(data)\r\n                }\r\n                !this.ignore_animation && this.play_next()\r\n            }\r\n            let card = Utils.parseCard(data.card)\r\n            this.last_out_card = cc.instantiate(self.out_card_prefab_dict[dir]);\r\n            this.last_out_card.getComponent(\"OutCard\").init(dir, card.type, card.value)\r\n\r\n            if (!this.ignore_animation) {\r\n                let out_card_big = cc.instantiate(this.out_card_big_prefab_dict[4]);\r\n                out_card_big.getComponent(\"OutCard\").init(4, card.type, card.value, null, true)\r\n                this.findNode(dir, \"out_big\").removeAllChildren()\r\n                out_card_big.parent = this.findNode(dir, \"out_big\")\r\n                this.runAfter(() => {\r\n                    out_card_big.parent = null\r\n                    _discard(dir, card)\r\n                }, 1000)\r\n            } else {\r\n                _discard(dir, card)\r\n            }\r\n\r\n            !this.ignore_animation && cc.audio.playCard(card.type, card.value)\r\n            if (this.findNode(dir, \"cur.normal.new\")._children.length) {\r\n                this.findNode(dir, \"cur.normal.new\").removeAllChildren()\r\n            } else {\r\n                // console.log(this.findNode(dir, \"cur.normal.old\")._children)\r\n                // this.findNode(dir, \"cur.normal.old\")._children[0].parent = null\r\n            }\r\n\r\n            if (data.seat == cc.mj.mgr.self_seat) {\r\n                if (cc.mj.mgr.self_selected_card) {\r\n                    cc.mj.mgr.self_selected_card.reset(this.findNode(dir, \"cur.normal.old\"))\r\n                }\r\n                cc.mj.mgr.initCards(data.cards)\r\n                // 刷新手牌\r\n                // cc.mj.mgr.discard({ type: data.type, value: data.value })\r\n                this.refreshSelfCards()\r\n            } else {\r\n                this.refreshOtherCards(dir, data.cards)\r\n            }\r\n        })\r\n        // 抓牌\r\n        cc.mj.evt.regEvt(\"NewDiscard\", (data) => {\r\n            this.findNode(this.dir, \"event_handler\").removeAllChildren()\r\n            cc.mj.mgr.cur_seat = data.seat\r\n            this.newTurn()\r\n            !this.ignore_animation && this.play_next()\r\n        })\r\n\r\n        // 抓牌\r\n        cc.mj.evt.regEvt(\"SupplyCard\", (data) => {\r\n            if (this.ignore_animation) return\r\n            this.findNode(this.dir, \"event_handler\").removeAllChildren()\r\n            let dir = Utils.dirFromSeat(data.seat)\r\n            let card = Utils.parseCard(data.card)\r\n            this.findNode(dir, \"cur.normal.new\").removeAllChildren()\r\n            let new_card = cc.instantiate(this.cur_card_prefab_dict[dir]);\r\n            new_card.parent = this.findNode(dir, \"cur.normal.new\")\r\n            if (data.seat == cc.mj.mgr.self_seat) {\r\n                cc.mj.mgr.getNewCard({ type: card.type, value: card.value, laizi: card.laizi })\r\n                this.refreshSelfCards()\r\n            } else {\r\n                new_card.getComponent(\"CurCard\").init(dir, card.type, card.value, card.laizi)\r\n            }\r\n\r\n            this.newTurn()\r\n            !this.ignore_animation && this.play_next()\r\n        })\r\n        // 补花\r\n        cc.mj.evt.regEvt(\"ReplaceHua\", (data) => {\r\n            let dir = Utils.dirFromSeat(data.seat)\r\n            this.play_animation(data.seat, this.ani_hua_prefab, 600, () => {\r\n                this.play_next()\r\n            })\r\n            this.findNode(dir, \"hua\").active = true\r\n            this.findNode(dir, \"hua.num\")._components[0].string = data.cur_hua\r\n            if (data.seat == cc.mj.mgr.self_seat && data.rpl_cards) {\r\n                if (data.cards) {\r\n                    cc.mj.mgr.initCards(data.cards)\r\n                } else {\r\n                    for (let i = 0; i < data.rpl_cards.length; i++) {\r\n                        let rpl_card = data.rpl_cards[i]\r\n                        cc.mj.mgr.replaceCard({ type: rpl_card.type0, value: rpl_card.value0 }, { type: rpl_card.type1, value: rpl_card.value1, laizi: rpl_card.laizi })\r\n                    }\r\n                }\r\n                this.refreshSelfCards()\r\n            } else {\r\n                if (data.cards) {\r\n                    this.refreshOtherCards(dir, data.cards)\r\n                } else {\r\n                    for (let i = 0; i < data.rpl_cards.length; i++) {\r\n                        let rpl_card = data.rpl_cards[i]\r\n                        console.log(rpl_card)\r\n                        this.findNode(dir, \"cur.normal.new\")._children[0].getComponent(\"CurCard\").init(dir, rpl_card.type1, rpl_card.value1, rpl_card.laizi)\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        cc.mj.evt.regEvt(\"MakeSureHandler\", (data) => {\r\n            if (this.ignore_animation) return\r\n\r\n            let dir = Utils.dirFromSeat(data.seat)\r\n            let event_handler_node = this.findNode(dir, \"event_handler\")\r\n            event_handler_node.removeAllChildren()\r\n            let event_handler = cc.instantiate(this.event_handler_prefab)\r\n            let cs = event_handler.getComponent(\"HandlerReplay\")\r\n            for (let i = 0; i < data.evts.length; i++) {\r\n                let event = data.evts[i]\r\n                cs.able(event.event)\r\n            }\r\n            cs.able(0)\r\n            if (dir == 1) event_handler.rotation = 270\r\n            else if (dir == 3) event_handler.rotation = 90\r\n            event_handler.parent = event_handler_node\r\n            !this.ignore_animation && this.play_next()\r\n        })\r\n\r\n        cc.mj.evt.regEvt(\"HandleEvent\", (data) => {\r\n            !this.ignore_animation && this.seatHandleEvt(data)\r\n            if (!data.event) return this.play_next()\r\n            this.runAfter(() => {\r\n                let dir = Utils.dirFromSeat(data.seat)\r\n                let from_dir = Utils.dirFromSeat(data.from_seat)\r\n                let event_cards_node = this.findNode(dir, \"cur.event\")\r\n                event_cards_node.active = true\r\n                if (dir != from_dir) {\r\n                    this.last_out_card && (this.last_out_card.parent = null) && (this.last_out_card = null)\r\n                    if (from_dir == 1) {\r\n                        for (let i = 0; i < this.right_out_cards.length; i++) {\r\n                            if (this.right_out_cards[i].last_discard) {\r\n                                this.right_out_cards.splice(i, 1)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this.ignore_animation) {\r\n                    cc.audio.playEvent(data.event)\r\n                    let ani_event = cc.instantiate(this.ani_event_prefab)\r\n                    ani_event.parent = this.findNode(dir, \"ani_event\")\r\n                    ani_event.getComponent(\"AniEvent\").init(data.event)\r\n                    this.runAfter(() => { ani_event.parent = null }, 500)\r\n                }\r\n                // 杠\r\n                if (data.event == 4) {\r\n                    let state = data.state\r\n                    let remove_num = state == null ? (dir == from_dir ? 1 : 0) : (state == 4 ? 4 : 3)\r\n                    if (state == null) {\r\n                        for (let i = 0; i < event_cards_node._children.length; i++) {\r\n                            let event_card = event_cards_node._children[i]\r\n                            let cs = event_card.getComponent(\"EventCard\")\r\n                            if (cs.type == data.type && cs.value == data.value) {\r\n                                cs.init(dir, from_dir, data.event, data.type, data.value, state)\r\n                                break\r\n                            }\r\n                        }\r\n                        remove_num = 1\r\n                    } else {\r\n                        let peng = cc.instantiate(this.peng_prefab_dict[dir])\r\n                        peng.getComponent(\"EventCard\").init(dir, from_dir, data.event, data.type, data.value, state)\r\n                        peng.parent = event_cards_node\r\n                    }\r\n                    data.seat == cc.mj.mgr.self_seat ? cc.mj.mgr.gang(data.type, data.value, remove_num) : this.otherEvent(dir, from_dir, data.event, state)\r\n                } else if (data.event == 3) {\r\n                    // 碰\r\n                    let peng = cc.instantiate(this.peng_prefab_dict[dir])\r\n                    peng.getComponent(\"EventCard\").init(dir, from_dir, data.event, data.type, data.value)\r\n                    peng.parent = event_cards_node\r\n\r\n                    data.seat == cc.mj.mgr.self_seat ? cc.mj.mgr.peng(data.type, data.value) : this.otherEvent(dir, from_dir, data.event, null)\r\n                } else if (data.event == 2) {\r\n                    // 吃\r\n                    let peng = cc.instantiate(this.peng_prefab_dict[dir])\r\n                    peng.getComponent(\"EventCard\").init(dir, from_dir, data.event, data.type, data.value, null, data.value1, data.value2)\r\n                    peng.parent = event_cards_node\r\n\r\n                    data.seat == cc.mj.mgr.self_seat ? cc.mj.mgr.chi(data.type, data.value1, data.value2) : this.otherEvent(dir, from_dir, data.event, null)\r\n                }\r\n                // 移除手牌\r\n                if (data.seat == cc.mj.mgr.self_seat) {\r\n                    cc.mj.mgr.initCards(data.cards)\r\n                    this.refreshSelfCards()\r\n                } else {\r\n                    this.refreshOtherCards(dir, data.cards)\r\n                }\r\n                !this.ignore_animation && this.play_next()\r\n            }, this.ignore_animation ? 0 : 500)\r\n        })\r\n        cc.mj.evt.regEvt(\"UserWin\", (data) => {\r\n            let seat = data.role.seat\r\n            if (seat != null) {\r\n                cc.audio.playEvent(5)\r\n                let dir = Utils.dirFromSeat(seat)\r\n                this.seatHandleEvt({ event: 5, seat: seat })\r\n                this.runAfter(() => {\r\n                    let ani_event = cc.instantiate(this.ani_event_prefab)\r\n                    ani_event.parent = this.findNode(dir, \"ani_event\")\r\n                    ani_event.getComponent(\"AniEvent\").init(data.event, data.state)\r\n                    this.runAfter(() => { ani_event.parent = null }, 500)\r\n                }, 300)\r\n            }\r\n        })\r\n        cc.mj.evt.regEvt(\"KaiJin\", (data) => {\r\n            this.play_animation(data.seat, this.ani_kaijin_prefab, 800, () => {\r\n                this.play_next()\r\n            })\r\n\r\n            let dir = Utils.dirFromSeat(cc.mj.mgr.self_seat)\r\n            cc.mj.mgr.kaijin(data.type, data.value)\r\n            this.refreshSelfCards()\r\n            let cs = this.laizi_show.getComponent(\"OutCard\")\r\n            cs.init(dir, data.type, data.value)\r\n            this.laizi_show.active = true\r\n        })\r\n\r\n        cc.mj.evt.regEvt(\"Prepare\", (data) => {\r\n            if (!this.prepared) {\r\n                for (let i = 0; i < data.roles.length; i++) {\r\n                    let role = data.roles[i]\r\n                    let dir = Utils.dirFromSeat(role.seat)\r\n                    // let prepare_header = this.findNode(dir, 'prepare_header')\r\n                    // prepare_header.parent = this.findNode(dir, 'game_header')\r\n                    // prepare_header.active = true\r\n                    // prepare_header.removeAllChildren()\r\n                    if (role.uid) {\r\n                        let header = cc.instantiate(this.header_prefab)\r\n                        let cs = header.getComponent(\"Header\")\r\n                        cs.init(this, dir, role.uid, role.name, role.icon, role.money)\r\n                        header.parent = this.findNode(dir, 'gaming_header')\r\n                        // this.findNode(dir, \"prepare\").active = role.prepare\r\n                    } else {\r\n                        this.findNode(dir, \"prepare\").active = false\r\n                    }\r\n                }\r\n                this.prepared = true\r\n            }\r\n            this.play_next()\r\n        })\r\n\r\n        cc.mj.evt.regEvt(\"HaiDiLaoYue\", (data) => {\r\n            this.findNode(this.dir, \"event_handler\").removeAllChildren()\r\n            for (let i = 0; i < data.roles.length; i++) {\r\n                let role = data.roles[i]\r\n                let dir = Utils.dirFromSeat(role.role.seat)\r\n                let card = role.card\r\n                let card_node = cc.instantiate(this.self_cur_card_prefab);\r\n                card_node.getComponent(\"CurCard\").init(this.dir, card.type, card.value, card.laizi, this)\r\n                card_node.parent = this.findNode(dir, \"ani_event\")\r\n\r\n                if (dir == this.dir) continue\r\n\r\n                this.findNode(dir, \"cur.normal.old\").removeAllChildren()\r\n                for (let j = 0; j < role.cards.length; j++) {\r\n                    let card = role.cards[j]\r\n                    let out_card = cc.instantiate(this.out_card_prefab_dict[dir]);\r\n                    out_card.parent = this.findNode(dir, \"cur.normal.old\")\r\n                    if (dir == 1 || dir == 3) {\r\n                        this.findNode(dir, \"cur.normal.old\").getComponent(cc.Layout).spacingY = -15\r\n                    }\r\n                    out_card.getComponent(\"OutCard\").init(dir, card.type, card.value)\r\n                }\r\n            }\r\n            this.runAfter(() => { this.play_next() }, 300)\r\n        })\r\n    },\r\n    seatHandleEvt: function (data) {\r\n        let dir = Utils.dirFromSeat(data.seat)\r\n        for (let i = 1; i <= 4; i++) {\r\n            if (i == dir) {\r\n                continue\r\n            }\r\n            this.findNode(i, \"event_handler\").removeAllChildren()\r\n        }\r\n        let event_node = this.findNode(dir, \"event_handler\")\r\n        for (let i = 0; i < event_node._children.length; i++) {\r\n            event_node._children[i].getComponent(\"HandlerReplay\").handled(data.event)\r\n        }\r\n        this.runAfter(() => { event_node.removeAllChildren() }, 200)\r\n    },\r\n    otherEvent: function (dir, from_dir, event, state) {\r\n        // chi or peng\r\n        if (event != 4) {\r\n            let remove_num = 2;\r\n            let cur_cards_node = this.findNode(dir, \"cur.normal.old\")\r\n            while (remove_num) {\r\n                cur_cards_node._children[0].parent = null\r\n                remove_num -= 1\r\n            }\r\n        } else {\r\n\r\n            let remove_num = state == null ? 0 : 3;\r\n            let cur_cards_node = this.findNode(dir, \"cur.normal.old\")\r\n            while (remove_num) {\r\n                cur_cards_node._children[0].parent = null\r\n                remove_num -= 1\r\n            }\r\n            // 自己抓杠\r\n            if (dir == from_dir) {\r\n                this.findNode(dir, \"cur.normal.new\").removeAllChildren()\r\n            }\r\n        }\r\n    },\r\n    exit: function () {\r\n        this.clearAllTask()\r\n        cc.mjroom = null\r\n        cc.mj.mgr.replay = false\r\n    },\r\n    onDestroy: function () {\r\n    },\r\n    // called every frame\r\n    update: function (dt) {\r\n    },\r\n});\r\n"]}