{"version":3,"sources":["ImageLoader.js"],"names":["loadImage","url","code","callback","cc","loader","load","type","err","tex","console","log","spriteFrame","SpriteFrame","Rect","width","height","getBaseInfo","userid","baseInfoMap","sssHttp","sendRequest","ret","headimgurl","info","name","sex","master_url","Class","extends","Component","properties","onLoad","setupSpriteFrame","setUserID","icon","images","self","_spriteFrame","spr","getComponent","Sprite"],"mappings":"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","file":"ImageLoader.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\sss\\components","sourcesContent":["function loadImage(url, code, callback) {\r\n    /*\r\n    if(cc.images == null){\r\n        cc.images = {};\r\n    }\r\n    var imageInfo = cc.images[url];\r\n    if(imageInfo == null){\r\n        imageInfo = {\r\n            image:null,\r\n            queue:[],\r\n        };\r\n        cc.images[url] = imageInfo;\r\n    }\r\n    \r\n    cc.loader.load(url,function (err,tex) {\r\n        imageInfo.image = tex;\r\n        var spriteFrame = new cc.SpriteFrame(tex, cc.Rect(0, 0, tex.width, tex.height));\r\n        for(var i = 0; i < imageInfo.queue.length; ++i){\r\n            var itm = imageInfo.queue[i];\r\n            itm.callback(itm.code,spriteFrame);\r\n        }\r\n        itm.queue = [];\r\n    });\r\n    if(imageInfo.image != null){\r\n        var tex = imageInfo.image;\r\n        var spriteFrame = new cc.SpriteFrame(tex, cc.Rect(0, 0, tex.width, tex.height));\r\n        callback(code,spriteFrame);\r\n    }\r\n    else{\r\n        imageInfo.queue.push({code:code,callback:callback});\r\n    }*/\r\n\r\n\r\n    // var size = cc.director.getWinSize();\r\n    // var fileName = url;\r\n    // var fullPath = jsb.fileUtils.getWritablePath() + fileName;\r\n    // if(jsb.fileUtils.isFileExist(fullPath)){\r\n    //     jsb.fileUtils.removeFile(fullPath);\r\n    // }\r\n    // var texture = new cc.RenderTexture(Math.floor(size.width), Math.floor(size.height));\r\n    // texture.setPosition(cc.p(size.width/2, size.height/2));\r\n    // texture.saveToFile(fileName, cc.IMAGE_FORMAT_JPG);\r\n    // console.log('fullPath: ' + fullPath);\r\n\r\n    //cc.sys.localStorage.setItem(\"avatarUrl\",url);\r\n\r\n    // console.log('loadImage'+url);\r\n    // console.log('loadImage'+code);\r\n    // console.log('loadImage'+callback);\r\n    // console.log('loadImage1111'+cc.sys.localStorage.getItem('avatarUrl'));\r\n    //cc.loader.load({url: url, type: 'png'}, function (err, tex) {\r\n    //cc.loader.load(cc.sys.localStorage.getItem(url) + \".png\", function (err, tex) {\r\n    //cc.loader.loadImg(url, {isCrossOrigin : false}, function(err,img){\r\n    //\r\n    //cc.loader.load(cc.sys.localStorage.getItem(\"avatarUrl\") + \".png\", function (err, tex) {\r\n    cc.loader.load({ url: url, type: \"png\" }, function (err, tex) {\r\n        console.log('1111load' + err); //texä¸ºnull\r\n        console.log('1111load' + tex);\r\n        var spriteFrame = new cc.SpriteFrame(tex, cc.Rect(0, 0, tex.width, tex.height));\r\n        callback(code, spriteFrame);\r\n\r\n    });\r\n};\r\n\r\nfunction getBaseInfo(userid, callback) {\r\n    if (cc.baseInfoMap == null) {\r\n        cc.baseInfoMap = {};\r\n    }\r\n\r\n    if (cc.baseInfoMap[userid] != null) {\r\n        callback(userid, cc.baseInfoMap[userid]);\r\n    }\r\n    else {\r\n        cc.sssHttp.sendRequest('/base_info', { userid: userid }, function (ret) {\r\n            var url = null;\r\n            if (ret.headimgurl) {\r\n                url = ret.headimgurl;\r\n                //url = ret.headimgurl + \".png\";\r\n                console.log('1111111111177777777777' + ret.headimgurl);\r\n            }\r\n            var info = {\r\n                name: ret.name,\r\n                sex: ret.sex,\r\n                url: url,\r\n            }\r\n            cc.baseInfoMap[userid] = info;\r\n            callback(userid, info);\r\n\r\n        }, cc.sssHttp.master_url);\r\n    }\r\n};\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.setupSpriteFrame();\r\n    },\r\n\r\n    setUserID: function (userid, icon) {\r\n        // if(cc.sys.isNative == false ){\r\n        //     return;\r\n        // }\r\n        if (!userid || !icon) {\r\n            return;\r\n        }\r\n        if (cc.images == null) {\r\n            cc.images = {};\r\n        }\r\n\r\n        console.log('1111setUserID' + userid);\r\n        var self = this;\r\n        loadImage(icon, userid, function (err, spriteFrame) {\r\n            console.log('111111err' + err);\r\n            console.log('111spriteFrame' + spriteFrame);\r\n            self._spriteFrame = spriteFrame;\r\n            self.setupSpriteFrame();\r\n        });\r\n    },\r\n\r\n    setupSpriteFrame: function () {\r\n        console.log('111111setupSpriteFrame' + this._spriteFrame);\r\n        if (this._spriteFrame) {\r\n            var spr = this.getComponent(cc.Sprite);\r\n            console.log('111111setupSpriteFramespr' + spr);\r\n            if (spr) {\r\n                spr.spriteFrame = this._spriteFrame;\r\n            }\r\n        }\r\n    }\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}