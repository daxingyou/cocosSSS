{"version":3,"sources":["Status.js"],"names":["cc","Class","extends","Component","properties","_status","start","find","red","Color","green","yellow","update","dt","delay","getChildByName","sssNet","delayMS","getComponent","Label","string","color","vv","sspNet","power","scaleX","anysdkMgr","getBatteryPercent"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,iBAAQ;AAXA,KAHP;;AAiBL;AACAC,WAAO,iBAAY;AACf,aAAKD,OAAL,GAAeL,GAAGO,IAAH,CAAQ,eAAR,CAAf;;AAEA,aAAKC,GAAL,GAAW,IAAIR,GAAGS,KAAP,CAAa,GAAb,EAAiB,CAAjB,EAAmB,CAAnB,CAAX;AACA,aAAKC,KAAL,GAAa,IAAIV,GAAGS,KAAP,CAAa,CAAb,EAAe,GAAf,EAAmB,CAAnB,CAAb;AACA,aAAKE,MAAL,GAAc,IAAIX,GAAGS,KAAP,CAAa,GAAb,EAAiB,GAAjB,EAAqB,CAArB,CAAd;AACH,KAxBI;;AA0BL;AACAG,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAIC,QAAQ,KAAKT,OAAL,CAAaU,cAAb,CAA4B,OAA5B,CAAZ;AACA,YAAGf,GAAGgB,MAAH,CAAUC,OAAV,IAAqB,IAAxB,EAA6B;AACzBH,kBAAMI,YAAN,CAAmBlB,GAAGmB,KAAtB,EAA6BC,MAA7B,GAAsCpB,GAAGgB,MAAH,CAAUC,OAAV,GAAoB,IAA1D;AACA,gBAAGjB,GAAGgB,MAAH,CAAUC,OAAV,GAAoB,GAAvB,EAA2B;AACvBH,sBAAMO,KAAN,GAAc,KAAKb,GAAnB;AACH,aAFD,MAGK,IAAGR,GAAGgB,MAAH,CAAUC,OAAV,GAAoB,GAAvB,EAA2B;AAC5BH,sBAAMO,KAAN,GAAc,KAAKV,MAAnB;AACH,aAFI,MAGD;AACAG,sBAAMO,KAAN,GAAc,KAAKX,KAAnB;AACH;AACJ,SAXD,MAYK,IAAGV,GAAGsB,EAAH,CAAMC,MAAN,CAAaN,OAAb,IAAwB,IAA3B,EAAgC;AACjCH,kBAAMI,YAAN,CAAmBlB,GAAGmB,KAAtB,EAA6BC,MAA7B,GAAsCpB,GAAGsB,EAAH,CAAMC,MAAN,CAAaN,OAAb,GAAuB,IAA7D;AACA,gBAAGjB,GAAGsB,EAAH,CAAMC,MAAN,CAAaN,OAAb,GAAuB,GAA1B,EAA8B;AAC1BH,sBAAMO,KAAN,GAAc,KAAKb,GAAnB;AACH,aAFD,MAGK,IAAGR,GAAGsB,EAAH,CAAMC,MAAN,CAAaN,OAAb,GAAuB,GAA1B,EAA8B;AAC/BH,sBAAMO,KAAN,GAAc,KAAKV,MAAnB;AACH,aAFI,MAGD;AACAG,sBAAMO,KAAN,GAAc,KAAKX,KAAnB;AACH;AACJ,SAXI,MAYD;AACAI,kBAAMI,YAAN,CAAmBlB,GAAGmB,KAAtB,EAA6BC,MAA7B,GAAsC,KAAtC;AACAN,kBAAMO,KAAN,GAAc,KAAKb,GAAnB;AACH;;AAED,YAAIgB,QAAQ,KAAKnB,OAAL,CAAaU,cAAb,CAA4B,OAA5B,CAAZ;AACAS,cAAMC,MAAN,GAAezB,GAAGsB,EAAH,CAAMI,SAAN,CAAgBC,iBAAhB,EAAf;AACH;AA5DI,CAAT","file":"Status.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\sss\\components","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _status:null,\r\n    },\r\n\r\n    // use this for initialization\r\n    start: function () {\r\n        this._status = cc.find('Canvas/status');\r\n\r\n        this.red = new cc.Color(205,0,0);\r\n        this.green = new cc.Color(0,205,0);\r\n        this.yellow = new cc.Color(255,200,0);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        var delay = this._status.getChildByName('delay');\r\n        if(cc.sssNet.delayMS != null){\r\n            delay.getComponent(cc.Label).string = cc.sssNet.delayMS + 'ms';\r\n            if(cc.sssNet.delayMS > 800){\r\n                delay.color = this.red;\r\n            }\r\n            else if(cc.sssNet.delayMS > 300){\r\n                delay.color = this.yellow;\r\n            }\r\n            else{\r\n                delay.color = this.green;\r\n            }\r\n        }\r\n        else if(cc.vv.sspNet.delayMS != null){\r\n            delay.getComponent(cc.Label).string = cc.vv.sspNet.delayMS + 'ms';\r\n            if(cc.vv.sspNet.delayMS > 800){\r\n                delay.color = this.red;\r\n            }\r\n            else if(cc.vv.sspNet.delayMS > 300){\r\n                delay.color = this.yellow;\r\n            }\r\n            else{\r\n                delay.color = this.green;\r\n            }\r\n        }\r\n        else{\r\n            delay.getComponent(cc.Label).string = 'N/A';\r\n            delay.color = this.red;\r\n        }\r\n        \r\n        var power = this._status.getChildByName('power');\r\n        power.scaleX = cc.vv.anysdkMgr.getBatteryPercent();\r\n    },\r\n});\r\n"]}