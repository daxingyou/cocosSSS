{"version":3,"sources":["MJMgr.js"],"names":["cc","Class","extends","Component","properties","statics","initCards","cards","self_cards","i","length","push","Utils","parseCard","new_card","sortCards","self_discard","slice","cur_seat","self_seat","sort","c1","c2","laizi","type","value","getNewCard","card","discard","card_","splice","replaceCard","card1","card2","removeCard","num","peng","chi","value1","value2","gang","remove_num","kaijin","debug","console","log","reset","init","recover","paused"],"mappings":"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","file":"MJMgr.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n\r\n    },\r\n    statics: {\r\n        initCards: function (cards) {\r\n            this.self_cards = []\r\n            for (let i = 0; i < cards.length; i++) {\r\n                this.self_cards.push(Utils.parseCard(cards[i]))\r\n            }\r\n            this.new_card = null\r\n            this.sortCards()\r\n            if (this.self_discard()) {\r\n                this.new_card = this.self_cards[this.self_cards.length - 1]\r\n                this.self_cards = this.self_cards.slice(0, -1)\r\n            }\r\n        },\r\n        self_discard: function () {\r\n            return this.cur_seat == this.self_seat\r\n        },\r\n        sortCards: function () {\r\n            this.self_cards.sort((c1, c2) => {\r\n                if (c1.laizi) {\r\n                    return -1\r\n                }\r\n                if (c2.laizi) {\r\n                    return 1\r\n                }\r\n                if (c1.type > c2.type) {\r\n                    return 1\r\n                } else if (c1.type == c2.type) {\r\n                    return c1.value < c2.value ? -1 : (c1.value == c2.value ? 0 : 1)\r\n                } else {\r\n                    return -1\r\n                }\r\n            })\r\n        },\r\n        getNewCard: function (card) {\r\n            if (this.new_card) {\r\n                this.self_cards.push(this.new_card)\r\n            }\r\n            this.new_card = card\r\n            if (this.new_card.laizi) {\r\n                this.self_cards.push(this.new_card)\r\n                this.sortCards()\r\n                this.new_card = this.self_cards[this.self_cards.length - 1]\r\n                this.self_cards = this.self_cards.slice(0, -1)\r\n            }\r\n        },\r\n        discard: function (card) {\r\n            if (this.new_card && this.new_card.type == card.type && this.new_card.value == card.value) {\r\n                this.new_card = null\r\n            } else {\r\n                if (this.new_card) {\r\n                    this.self_cards.push(this.new_card)\r\n                    this.sortCards()\r\n                }\r\n                this.new_card = null\r\n                for (let i = 0; i < this.self_cards.length; i++) {\r\n                    let card_ = this.self_cards[i]\r\n                    if (card_.type != card.type || card_.value != card.value) {\r\n                        continue\r\n                    }\r\n                    this.self_cards.splice(i, 1)\r\n                    break\r\n                }\r\n            }\r\n        },\r\n        replaceCard: function (card1, card2) {\r\n            // for (let i = 0; i < this.self_cards.length; i++) {\r\n            //     let card_ = this.self_cards[i]\r\n            //     if (card_.type != card1.type || card_.value != card1.value) {\r\n            //         continue\r\n            //     }\r\n            //     this.self_cards[i] = card2\r\n            //     return\r\n            // }\r\n            // if (this.new_card && this.new_card.type == card1.type, this.new_card.value == card1.value) {\r\n            this.new_card = card2\r\n            // }\r\n        },\r\n        removeCard: function (type, value, num) {\r\n            if (this.new_card && this.new_card.type == type && this.new_card.value == value) {\r\n                this.new_card = null\r\n                num -= 1\r\n            }\r\n            if (!num) {\r\n                return\r\n            }\r\n            for (let i = 0; i < this.self_cards.length; i++) {\r\n                if (this.self_cards[i].type != type || this.self_cards[i].value != value) {\r\n                    continue\r\n                }\r\n                this.self_cards.splice(i, num)\r\n                return\r\n            }\r\n        },\r\n        peng: function (type, value) {\r\n            this.removeCard(type, value, 2)\r\n        },\r\n        chi: function (type, value1, value2) {\r\n            this.removeCard(type, value1, 1)\r\n            this.removeCard(type, value2, 1)\r\n        },\r\n        gang: function (type, value, remove_num) {\r\n            this.removeCard(type, value, remove_num)\r\n        },\r\n        kaijin: function (type, value) {\r\n            if (this.new_card) {\r\n                this.self_cards.push(this.new_card)\r\n            }\r\n            for (let i = 0; i < this.self_cards.length; i++) {\r\n                if (this.self_cards[i].type != type || this.self_cards[i].value != value) {\r\n                    continue\r\n                }\r\n                this.self_cards[i].laizi = true\r\n            }\r\n            this.sortCards()\r\n            if (this.self_discard()) {\r\n                this.new_card = this.self_cards[this.self_cards.length - 1]\r\n                this.self_cards = this.self_cards.slice(0, -1)\r\n            }\r\n        },\r\n        debug: function () {\r\n            console.log(this.self_cards, this.new_card)\r\n        },\r\n        reset: function () {\r\n            this.self_cards = null\r\n            this.new_card = null\r\n        }\r\n    },\r\n    init: function () {\r\n        this.cur_seat = null\r\n        this.self_seat = null\r\n        this.self_cards = []\r\n        this.new_card = null\r\n        this.recover = false\r\n        this.paused = false\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    // start () {\r\n\r\n    // },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}