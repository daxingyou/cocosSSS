{"version":3,"sources":["OutCard.js"],"names":["cc","Class","extends","Component","properties","card","default","type","Node","atlas_big","SpriteAtlas","atlas","icon","hua","Label","onLoad","init","dir","value","num","big","ext","mj","user","mjStyleBig","sprite_name","cardframe","getSpriteFrame","getComponent","Sprite","spriteFrame","active","node","parent","string","e","start_play","action1","moveBy","p","action2","actionsArray","sequence","action","runAction","repeatForever","stop_play","stopAction"],"mappings":"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","file":"OutCard.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        card: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        atlas_big: {\r\n            default: null,\r\n            type: cc.SpriteAtlas\r\n        },\r\n        atlas: {\r\n            default: null,\r\n            type: cc.SpriteAtlas\r\n        },\r\n        icon: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        hua: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onLoad: function () {\r\n\r\n    },\r\n    init: function (dir, type, value, num, big) {\r\n        this.value = value\r\n        let ext = cc.mj.user.mjStyleBig() ? \"_big\" : \"\"\r\n        let atlas = cc.mj.user.mjStyleBig() ? this.atlas_big : this.atlas\r\n        if (value != null) {\r\n            let sprite_name = 'p' + dir + 's' + type + '_' + value + ext\r\n            if (type == 4 && value > 7) {\r\n                sprite_name = 'p' + dir + 's5_' + (value - 7) + ext\r\n            }\r\n            let cardframe = atlas.getSpriteFrame(sprite_name);\r\n            this.card.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n        } else {\r\n            this.card.getComponent(cc.Sprite).spriteFrame = null;\r\n        }\r\n        if (this.icon) {\r\n            this.icon.active = false\r\n        }\r\n        try {\r\n            if (num > 1) {\r\n                this.hua.node.parent.active = true\r\n                this.hua.string = num\r\n            }\r\n        } catch (e) { }\r\n    },\r\n    start_play: function () {\r\n        if (this.icon) {\r\n            this.icon.active = true\r\n            let action1 = cc.moveBy(0.3, cc.p(0, 15));\r\n            let action2 = cc.moveBy(0.3, cc.p(0, -15));\r\n            let actionsArray = cc.sequence([action1, action2]);\r\n            this.action = this.icon.runAction(cc.repeatForever(actionsArray));\r\n        }\r\n    },\r\n    stop_play: function () {\r\n        if (this.icon) {\r\n            this.icon.stopAction(this.action)\r\n            this.icon.active = false\r\n        }\r\n    }\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    // start () {\r\n\r\n    // },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}