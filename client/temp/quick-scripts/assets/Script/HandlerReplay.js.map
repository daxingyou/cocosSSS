{"version":3,"sources":["HandlerReplay.js"],"names":["name_dict","cc","Class","extends","Component","properties","onLoad","able","event","name","event_node","node","getChildByName","active","handled","gesture","action1","scaleTo","action2","moveTo","p","actionsArray","runAction","spawn"],"mappings":";;;;;;AAAA,IAAIA,YAAY;AACZ,OAAG,KADS,EACF,GAAG,MADD,EACS,GAAG,MADZ,EACoB,GAAG,KADvB,EAC8B,GAAG;AADjC,CAAhB;;AAIAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBLC,YAAQ,kBAAY,CACnB,CAtBI;AAuBLC,UAAM,cAAUC,KAAV,EAAiB;AACnB,YAAIC,OAAOT,UAAUQ,KAAV,CAAX;AACA,YAAIE,aAAa,KAAKC,IAAL,CAAUC,cAAV,CAAyBH,IAAzB,CAAjB;AACAC,mBAAWE,cAAX,CAA0B,OAA1B,EAAmCC,MAAnC,GAA4C,IAA5C;AACH,KA3BI;AA4BLC,aAAS,iBAAUN,KAAV,EAAiB;AACtB,YAAIC,OAAOT,UAAUQ,KAAV,CAAX;AACA,YAAIO,UAAU,KAAKJ,IAAL,CAAUC,cAAV,CAAyBH,IAAzB,EAA+BG,cAA/B,CAA8C,eAA9C,CAAd;AACAG,gBAAQF,MAAR,GAAiB,IAAjB;;AAEA,YAAIG,UAAUf,GAAGgB,OAAH,CAAW,IAAX,EAAiB,GAAjB,CAAd;AACA,YAAIC,UAAUjB,GAAGkB,MAAH,CAAU,IAAV,EAAgBlB,GAAGmB,CAAH,CAAK,EAAL,EAAS,CAAC,EAAV,CAAhB,CAAd;AACA,YAAIC,eAAe,CAACL,OAAD,EAAUE,OAAV,CAAnB;AACAH,gBAAQO,SAAR,CAAkBrB,GAAGsB,KAAH,CAASF,YAAT,CAAlB;AACH;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;AA/CK,CAAT","file":"HandlerReplay.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["let name_dict = {\r\n    5: 'win', 4: 'gang', 3: 'peng', 2: 'chi', 0: 'guo'\r\n}\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    onLoad: function () {\r\n    },\r\n    able: function (event) {\r\n        let name = name_dict[event]\r\n        let event_node = this.node.getChildByName(name)\r\n        event_node.getChildByName(\"icon1\").active = true\r\n    },\r\n    handled: function (event) {\r\n        let name = name_dict[event]\r\n        let gesture = this.node.getChildByName(name).getChildByName(\"replayGesture\")\r\n        gesture.active = true\r\n\r\n        let action1 = cc.scaleTo(0.15, 0.9);\r\n        let action2 = cc.moveTo(0.15, cc.p(10, -30));\r\n        let actionsArray = [action1, action2];\r\n        gesture.runAction(cc.spawn(actionsArray));\r\n    }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    // start () {\r\n\r\n    // },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}