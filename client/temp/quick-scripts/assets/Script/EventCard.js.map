{"version":3,"sources":["EventCard.js"],"names":["cc","Class","extends","Component","properties","card1","default","type","Node","card2","card3","card4","atlas","SpriteAtlas","atlas_big","dir","init","from_dir","event","value","state","value1","value2","mj","user","mjStyleBig","ext","active","cardframe","getSpriteFrame","getComponent","Sprite","spriteFrame","cardframe1","card1frame","card2frame","card3frame","dir_angle","sprite","node","rotation"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAO;AACHC,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN,SADC;AAKRC,eAAO;AACHH,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN,SALC;AASRE,eAAO;AACHJ,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN,SATC;AAaRG,eAAO;AACHL,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN,SAbC;AAiBRI,eAAO;AACHN,qBAAS,IADN;AAEHC,kBAAMP,GAAGa;AAFN,SAjBC;AAqBRC,mBAAW;AACPR,qBAAS,IADF;AAEPC,kBAAMP,GAAGa;AAFF,SArBH;AAyBRE,aAAK;AACDT,qBAAS,IADR;AAEDC,kBAAMP,GAAGQ;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBK,SAzBG,EAHP;AAgDLQ,UAAM,cAAUD,GAAV,EAAeE,QAAf,EAAyBC,KAAzB,EAAgCX,IAAhC,EAAsCY,KAAtC,EAA6CC,KAA7C,EAAoDC,MAApD,EAA4DC,MAA5D,EAAoE;AACtE,YAAIV,QAAQZ,GAAGuB,EAAH,CAAMC,IAAN,CAAWC,UAAX,KAA0B,KAAKX,SAA/B,GAA2C,KAAKF,KAA5D;AACA,YAAIc,MAAM1B,GAAGuB,EAAH,CAAMC,IAAN,CAAWC,UAAX,KAA0B,MAA1B,GAAmC,EAA7C;AACA,aAAKP,KAAL,GAAaA,KAAb;AACA,aAAKX,IAAL,GAAYA,IAAZ;AACA,aAAKY,KAAL,GAAaA,KAAb;;AAEA,aAAKR,KAAL,CAAWgB,MAAX,GAAoB,KAApB;AACA;AACA,YAAIT,SAAS,CAAb,EAAgB;AACZ,iBAAKE,KAAL,GAAaA,KAAb;AACA,iBAAKT,KAAL,CAAWgB,MAAX,GAAoB,IAApB;AACA;AACA,gBAAI,KAAKP,KAAL,IAAc,CAAlB,EAAqB;AACjB,oBAAIQ,YAAY,KAAKhB,KAAL,CAAWiB,cAAX,CAA0B,WAAWd,GAArC,CAAhB;AACA,qBAAKV,KAAL,CAAWyB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,SAAjD;AACA,qBAAKnB,KAAL,CAAWqB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,SAAjD;AACA,qBAAKlB,KAAL,CAAWoB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,SAAjD;;AAEA,oBAAIb,OAAO,CAAX,EAAc;AACV,wBAAIkB,aAAarB,MAAMiB,cAAN,CAAqB,MAAMd,GAAN,GAAY,GAAZ,GAAkBR,IAAlB,GAAyB,GAAzB,GAA+BY,KAA/B,GAAuCO,GAA5D,CAAjB;AACA,yBAAKf,KAAL,CAAWmB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDC,UAAjD;AACH,iBAHD,MAGO;AACH,yBAAKtB,KAAL,CAAWmB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,SAAjD;AACH;AACJ,aAZD,MAYO;AACH,oBAAIA,aAAYhB,MAAMiB,cAAN,CAAqB,MAAMd,GAAN,GAAY,GAAZ,GAAkBR,IAAlB,GAAyB,GAAzB,GAA+BY,KAA/B,GAAuCO,GAA5D,CAAhB;AACA,qBAAKrB,KAAL,CAAWyB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,UAAjD;AACA,qBAAKnB,KAAL,CAAWqB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,UAAjD;AACA,qBAAKlB,KAAL,CAAWoB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,UAAjD;AACA,qBAAKjB,KAAL,CAAWmB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,UAAjD;AACH;AACJ,SAvBD,MAuBO,IAAIV,SAAS,CAAb,EAAgB;AACnB,gBAAIU,cAAYhB,MAAMiB,cAAN,CAAqB,MAAMd,GAAN,GAAY,GAAZ,GAAkBR,IAAlB,GAAyB,GAAzB,GAA+BY,KAA/B,GAAuCO,GAA5D,CAAhB;AACA,iBAAKrB,KAAL,CAAWyB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,WAAjD;AACA,iBAAKnB,KAAL,CAAWqB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,WAAjD;AACA,iBAAKlB,KAAL,CAAWoB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDJ,WAAjD;AACA;AACH,SANM,MAMA,IAAIV,SAAS,CAAb,EAAgB;AACnB;AACA,iBAAKG,MAAL,GAAcA,MAAd;AACA,iBAAKC,MAAL,GAAcA,MAAd;;AAEA,gBAAIY,aAAatB,MAAMiB,cAAN,CAAqB,MAAMd,GAAN,GAAY,GAAZ,GAAkBR,IAAlB,GAAyB,GAAzB,GAA+Bc,MAA/B,GAAwCK,GAA7D,CAAjB;AACA,iBAAKrB,KAAL,CAAWyB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDE,UAAjD;AACA,gBAAIC,aAAavB,MAAMiB,cAAN,CAAqB,MAAMd,GAAN,GAAY,GAAZ,GAAkBR,IAAlB,GAAyB,GAAzB,GAA+BY,KAA/B,GAAuCO,GAA5D,CAAjB;AACA,iBAAKjB,KAAL,CAAWqB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDG,UAAjD;AACA,gBAAIC,aAAaxB,MAAMiB,cAAN,CAAqB,MAAMd,GAAN,GAAY,GAAZ,GAAkBR,IAAlB,GAAyB,GAAzB,GAA+Be,MAA/B,GAAwCI,GAA7D,CAAjB;AACA,iBAAKhB,KAAL,CAAWoB,YAAX,CAAwB9B,GAAG+B,MAA3B,EAAmCC,WAAnC,GAAiDI,UAAjD;AACH;AACD,YAAInB,YAAYF,GAAhB,EAAqB;AACjB,iBAAKA,GAAL,CAASY,MAAT,GAAkB,KAAlB;AACH,SAFD,MAEO;AACH,gBAAIU,YAAY;AACZ,mBAAG,EAAE,GAAG,CAAL,EAAQ,GAAG,CAAC,EAAZ,EAAgB,GAAG,GAAnB,EADS;AAEZ,mBAAG,EAAE,GAAG,EAAL,EAAS,GAAG,CAAC,EAAb,EAAiB,GAAG,GAApB,EAFS;AAGZ,mBAAG,EAAE,GAAG,EAAL,EAAS,GAAG,CAAZ,EAAe,GAAG,GAAlB,EAHS;AAIZ,mBAAG,EAAE,GAAG,EAAL,EAAS,GAAG,CAAZ,EAAe,GAAG,CAAC,EAAnB;AAJS,aAAhB;AAMA,gBAAIC,SAAS,KAAKvB,GAAL,CAASe,YAAT,CAAsB9B,GAAG+B,MAAzB,CAAb;AACA,iBAAKhB,GAAL,KAAauB,OAAOC,IAAP,CAAYC,QAAZ,GAAuBH,UAAUtB,GAAV,EAAeE,QAAf,CAApC;AACH;AACJ;AACD;;AAEA;;AAEA;;AAEA;;AAEA;AAvHK,CAAT","file":"EventCard.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        card1: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        card2: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        card3: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        card4: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        atlas: {\r\n            default: null,\r\n            type: cc.SpriteAtlas\r\n        },\r\n        atlas_big: {\r\n            default: null,\r\n            type: cc.SpriteAtlas\r\n        },\r\n        dir: {\r\n            default: null,\r\n            type: cc.Node\r\n        }\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    init: function (dir, from_dir, event, type, value, state, value1, value2) {\r\n        let atlas = cc.mj.user.mjStyleBig() ? this.atlas_big : this.atlas\r\n        let ext = cc.mj.user.mjStyleBig() ? \"_big\" : \"\"\r\n        this.event = event\r\n        this.type = type\r\n        this.value = value;\r\n\r\n        this.card4.active = false\r\n        // 杠\r\n        if (event == 4) {\r\n            this.state = state\r\n            this.card4.active = true\r\n            // 暗杆\r\n            if (this.state == 4) {\r\n                let cardframe = this.atlas.getSpriteFrame('tdbgs_' + dir);\r\n                this.card1.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n                this.card2.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n                this.card3.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n\r\n                if (dir == 4) {\r\n                    let cardframe1 = atlas.getSpriteFrame('p' + dir + 's' + type + '_' + value + ext);\r\n                    this.card4.getComponent(cc.Sprite).spriteFrame = cardframe1;\r\n                } else {\r\n                    this.card4.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n                }\r\n            } else {\r\n                let cardframe = atlas.getSpriteFrame('p' + dir + 's' + type + '_' + value + ext);\r\n                this.card1.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n                this.card2.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n                this.card3.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n                this.card4.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n            }\r\n        } else if (event == 3) {\r\n            let cardframe = atlas.getSpriteFrame('p' + dir + 's' + type + '_' + value + ext);\r\n            this.card1.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n            this.card2.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n            this.card3.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n            //碰\r\n        } else if (event == 2) {\r\n            // 吃\r\n            this.value1 = value1\r\n            this.value2 = value2\r\n\r\n            let card1frame = atlas.getSpriteFrame('p' + dir + 's' + type + '_' + value1 + ext);\r\n            this.card1.getComponent(cc.Sprite).spriteFrame = card1frame;\r\n            let card2frame = atlas.getSpriteFrame('p' + dir + 's' + type + '_' + value + ext);\r\n            this.card2.getComponent(cc.Sprite).spriteFrame = card2frame;\r\n            let card3frame = atlas.getSpriteFrame('p' + dir + 's' + type + '_' + value2 + ext);\r\n            this.card3.getComponent(cc.Sprite).spriteFrame = card3frame;\r\n        }\r\n        if (from_dir == dir) {\r\n            this.dir.active = false\r\n        } else {\r\n            let dir_angle = {\r\n                1: { 2: 0, 3: -90, 4: 180 },\r\n                2: { 1: 90, 3: -90, 4: 180 },\r\n                3: { 1: 90, 2: 0, 4: 180 },\r\n                4: { 1: 90, 2: 0, 3: -90 }\r\n            }\r\n            let sprite = this.dir.getComponent(cc.Sprite)\r\n            this.dir && (sprite.node.rotation = dir_angle[dir][from_dir])\r\n        }\r\n    }\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    // start () {\r\n\r\n    // },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}