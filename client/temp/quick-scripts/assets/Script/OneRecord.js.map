{"version":3,"sources":["OneRecord.js"],"names":["cc","Class","extends","Component","properties","created","default","type","Label","value","remainder_value","usage","onLoad","init","data","string","slice","integral","node","color"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,iBAAS;AACLC,qBAAS,IADJ;AAELC,kBAAMP,GAAGQ;AAFJ,SADD;AAKRC,eAAO;AACHH,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN,SALC;AASRE,yBAAiB;AACbJ,qBAAS,IADI;AAEbC,kBAAMP,GAAGQ;AAFI,SATT;AAaRG,eAAO;AACHL,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN;AAbC,KAHP;AAqBLI,YAAQ,kBAAY,CAEnB,CAvBI;AAwBLC,UAAM,cAAUC,IAAV,EAAgB;AAClB,aAAKT,OAAL,CAAaU,MAAb,GAAsBD,KAAKT,OAAL,CAAaW,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,CAAtB;AACA,YAAIF,KAAKG,QAAL,GAAgB,CAApB,EAAuB;AACnB,iBAAKR,KAAL,CAAWM,MAAX,GAAoB,MAAMD,KAAKG,QAA/B;AACA,iBAAKR,KAAL,CAAWS,IAAX,CAAgBC,KAAhB,GAAwB,IAAInB,GAAGmB,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmB,GAAnB,EAAwB,GAAxB,CAAxB;AACH,SAHD,MAGO;AACH,iBAAKV,KAAL,CAAWM,MAAX,GAAoBD,KAAKG,QAAzB;AACA,iBAAKR,KAAL,CAAWS,IAAX,CAAgBC,KAAhB,GAAwB,IAAInB,GAAGmB,KAAP,CAAa,CAAb,EAAgB,GAAhB,EAAqB,CAArB,EAAwB,GAAxB,CAAxB;AACH;AACD,aAAKT,eAAL,CAAqBK,MAArB,GAA8BD,KAAKJ,eAAnC;AACA,aAAKC,KAAL,CAAWI,MAAX,GAAoBD,KAAKH,KAAzB;AACH;AACD;;AAEA;;AAEA;;AAEA;;AAEA;AA5CK,CAAT","file":"OneRecord.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        created: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        value: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        remainder_value: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        usage: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n    },\r\n    onLoad: function () {\r\n\r\n    },\r\n    init: function (data) {\r\n        this.created.string = data.created.slice(5, 16)\r\n        if (data.integral > 0) {\r\n            this.value.string = '+' + data.integral\r\n            this.value.node.color = new cc.color(0, 0, 255, 255)\r\n        } else {\r\n            this.value.string = data.integral\r\n            this.value.node.color = new cc.color(0, 255, 0, 255)\r\n        }\r\n        this.remainder_value.string = data.remainder_value\r\n        this.usage.string = data.usage\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    // start () {\r\n\r\n    // },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}