{"version":3,"sources":["PaoMaDeng.js"],"names":["cc","Class","extends","Component","properties","content","Label","onLoad","http","sendHall","method","resp","notice_list","notices","reset","idx","undefined","length","string","node","x","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,iBAASL,GAAGM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBQ,KAHP;;AAsBL;;AAEAC,UAxBK,oBAwBI;AAAA;;AACLC,aAAKC,QAAL,CAAc,EAAEC,QAAQ,eAAV,EAAd,EAA2C,UAACC,IAAD,EAAU;AACjD,kBAAKC,WAAL,GAAmBD,KAAKE,OAAxB;AACA,kBAAKC,KAAL;AACH,SAHD;AAIH,KA7BI;AA+BLA,SA/BK,mBA+BG;AACJ,aAAKC,GAAL,GAAW,KAAKA,GAAL,IAAYC,SAAZ,GAAwB,CAAC,KAAKD,GAAL,GAAW,CAAZ,IAAiB,KAAKH,WAAL,CAAiBK,MAA1D,GAAmE,CAA9E;AACA,aAAKZ,OAAL,CAAaa,MAAb,GAAsB,KAAKN,WAAL,CAAiB,KAAKG,GAAtB,CAAtB;AACA,aAAKV,OAAL,CAAac,IAAb,CAAkBC,CAAlB,GAAsB,GAAtB;AACH,KAnCI;AAqCLC,UArCK,kBAqCEC,EArCF,EAqCM;AACP,YAAI,CAAC,KAAKV,WAAV,EAAuB;AACvB,aAAKP,OAAL,CAAac,IAAb,CAAkBC,CAAlB,IAAuB,CAAvB;AACA,YAAI,KAAKf,OAAL,CAAac,IAAb,CAAkBC,CAAlB,GAAsB,CAAC,GAAD,GAAO,KAAKf,OAAL,CAAaa,MAAb,CAAoBD,MAApB,GAA6B,EAA9D,EAAkE;AAC9D,iBAAKH,KAAL;AACH;AACJ;AA3CI,CAAT","file":"PaoMaDeng.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\hall","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        content: cc.Label\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        http.sendHall({ method: \"system_notice\" }, (resp) => {\r\n            this.notice_list = resp.notices\r\n            this.reset()\r\n        })\r\n    },\r\n\r\n    reset() {\r\n        this.idx = this.idx != undefined ? (this.idx + 1) % this.notice_list.length : 0\r\n        this.content.string = this.notice_list[this.idx]\r\n        this.content.node.x = 500\r\n    },\r\n\r\n    update(dt) {\r\n        if (!this.notice_list) return\r\n        this.content.node.x -= 1\r\n        if (this.content.node.x < -500 - this.content.string.length * 40) {\r\n            this.reset()\r\n        }\r\n    },\r\n});\r\n"]}