{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\CurCard.js"],"names":["cc","Class","extends","Component","properties","card","default","type","Node","atlas_big","SpriteAtlas","atlas","jin","card_prefab","Prefab","onLoad","pre_parent","node","parent","on","EventType","TOUCH_START","select","bind","TOUCH_MOVE","move","TOUCH_END","stop_move","TOUCH_CANCEL","init","dir","value","mjgame","laizi","active","selected","ext","mj","user","mjStyleBig","sprite_name","cardframe","getSpriteFrame","getComponent","Sprite","spriteFrame","out_card","reset","y","mgr","self_selected_card","event","unable_handle","game","PreDiscard","cur_seat","http","sendGame","method","resp","audio","playHandleCard","getLocation","game_cfg","dist","instantiate","game_node","temp","convertToNodeSpaceAR","x","self_seat"],"mappings":"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","file":"CurCard.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        card: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        atlas_big: {\r\n            default: null,\r\n            type: cc.SpriteAtlas\r\n        },\r\n        atlas: {\r\n            default: null,\r\n            type: cc.SpriteAtlas\r\n        },\r\n        jin: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        card_prefab: cc.Prefab,\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onLoad: function () {\r\n        this.pre_parent = this.node.parent\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.select.bind(this))\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.move.bind(this))\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.stop_move.bind(this))\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.stop_move.bind(this))\r\n    },\r\n    init: function (dir, type, value, jin, mjgame) {\r\n        this.dir = dir\r\n        this.type = type\r\n        this.value = value\r\n        this.laizi = jin\r\n        this.jin.active = this.laizi\r\n        this.selected = false\r\n        this.mjgame = mjgame\r\n        let ext = cc.mj.user.mjStyleBig() ? \"_big\" : \"\"\r\n        let sprite_name = 'p' + dir + (dir == 4 ? 'b' : 's') + type + '_' + value + ext\r\n        if (type == 4 && value > 7) {\r\n            sprite_name = 'p' + dir + (dir == 4 ? 'b' : 's') + '5_' + (value - 7) + ext\r\n        }\r\n        let atlas = cc.mj.user.mjStyleBig() ? this.atlas_big : this.atlas\r\n        let cardframe = atlas.getSpriteFrame(sprite_name);\r\n        this.card.getComponent(cc.Sprite).spriteFrame = cardframe;\r\n        this.card.active = true\r\n        this.out_card = null\r\n    },\r\n    reset: function (parent) {\r\n        this.node.y = 0\r\n        this.selected = false\r\n        cc.mj.mgr.self_selected_card = null\r\n    },\r\n    select: function (event) {\r\n        if (this.unable_handle()) {\r\n            return\r\n        }\r\n        if (this.selected) {\r\n            cc.mj.game.PreDiscard(this.type, this.value)\r\n            //this.node.parent = null\r\n            cc.mj.mgr.cur_seat = null\r\n            http.sendGame({ method: \"discard\", type: this.type, value: this.value }, (resp) => { })\r\n            cc.audio.playHandleCard(\"card_out\")\r\n        } else {\r\n            this.selected = true\r\n            if (cc.mj.mgr.self_selected_card) {\r\n                cc.mj.mgr.self_selected_card.reset(cc.mj.mgr.self_selected_card.pre_parent)\r\n            }\r\n            cc.mj.mgr.self_selected_card = this\r\n            this.node.y = 20\r\n            cc.audio.playHandleCard(\"card_click\")\r\n        }\r\n    },\r\n    move: function (event) {\r\n        if (this.unable_handle()) {\r\n            return\r\n        }\r\n        if (event.getLocation().y > cc.mj.game_cfg.dist + 100) {\r\n            cc.mj.mgr.self_selected_card = this\r\n            if (!this.out_card) {\r\n                this.out_card = cc.instantiate(this.card_prefab)\r\n                this.out_card.getComponent(\"CurCard\").init(this.dir, this.type, this.value, this.laizi)\r\n                this.game_node = this.node.parent.parent.parent.parent\r\n                this.out_card.parent = this.game_node\r\n                this.card.active = false\r\n            }\r\n            // if (this.node.parent == this.pre_parent) {\r\n            //     this.node.parent = this.node.parent.parent.parent.parent\r\n            // }\r\n        }\r\n        if (this.out_card) {\r\n            var temp = event.getLocation()\r\n            //获取当前点击的局部坐标\r\n            temp = this.game_node.convertToNodeSpaceAR(temp)\r\n            this.out_card.x = temp.x\r\n            this.out_card.y = temp.y\r\n        } else {\r\n            cc.mj.mgr.self_selected_card = this\r\n            this.node.y = 20\r\n            this.selected = true\r\n        }\r\n    },\r\n    stop_move: function (event) {\r\n        if (this.unable_handle()) {\r\n            return\r\n        }\r\n        if (!this.out_card) {\r\n            return\r\n        }\r\n        var temp = event.getLocation()\r\n        temp = this.node.parent.convertToNodeSpaceAR(temp)\r\n        if (temp.y > 100) {\r\n            this.out_card.parent = null\r\n            cc.mj.game.PreDiscard(this.type, this.value)\r\n            //this.node.parent = null\r\n            cc.mj.mgr.cur_seat = null\r\n            http.sendGame({ method: \"discard\", type: this.type, value: this.value }, (resp) => { })\r\n            cc.audio.playHandleCard(\"card_out\")\r\n        } else {\r\n            this.card.active = true\r\n            this.out_card.parent = null\r\n            this.out_card = null\r\n            this.node.y = 0\r\n            this.node.x = 0\r\n            this.selected = false\r\n            cc.mj.mgr.self_selected_card = null\r\n        }\r\n    },\r\n    unable_handle: function () {\r\n        return cc.mj.mgr.cur_seat != cc.mj.mgr.self_seat || (this.type == 4 && !this.laizi)\r\n    }\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    // start () {\r\n\r\n    // },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}