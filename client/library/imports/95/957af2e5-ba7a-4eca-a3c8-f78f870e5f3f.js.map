{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\Toggle.js"],"names":["cc","Class","extends","Component","properties","bg","default","type","Node","checkmark","title","Label","checked_title","init","bg_sprite","checkmark_sprite","content","cb","_checked","getComponent","Sprite","spriteFrame","string","on","EventType","TOUCH_START","node","checked","_refresh","uncheck","isChecked","active","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,YAAI;AACAC,qBAAS,IADT;AAEAC,kBAAMP,GAAGQ;AAFT,SADI;AAKRC,mBAAW;AACPH,qBAAS,IADF;AAEPC,kBAAMP,GAAGQ;AAFF,SALH;AASRE,eAAO;AACHJ,qBAAS,IADN;AAEHC,kBAAMP,GAAGW;AAFN,SATC;AAaRC,uBAAe;AACXN,qBAAS,IADE;AAEXC,kBAAMP,GAAGW;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBe,SAbP,EAHP;;AAqCL;;AAEAE,UAAM,cAAUC,SAAV,EAAqBC,gBAArB,EAAuCC,OAAvC,EAAgDC,EAAhD,EAAoD;AAAA;;AACtD,aAAKC,QAAL,GAAgB,KAAhB;AACA,aAAKF,OAAL,GAAeA,OAAf;AACA,aAAKC,EAAL,GAAUA,EAAV;AACA,aAAKZ,EAAL,CAAQc,YAAR,CAAqBnB,GAAGoB,MAAxB,EAAgCC,WAAhC,GAA8CP,SAA9C;AACA,aAAKL,SAAL,CAAeU,YAAf,CAA4BnB,GAAGoB,MAA/B,EAAuCC,WAAvC,GAAqDN,gBAArD;AACA,aAAKL,KAAL,CAAWY,MAAX,GAAoBN,QAAQA,OAA5B;AACA,aAAKJ,aAAL,CAAmBU,MAAnB,GAA4BN,QAAQA,OAApC;AACA,aAAKX,EAAL,CAAQkB,EAAR,CAAWvB,GAAGQ,IAAH,CAAQgB,SAAR,CAAkBC,WAA7B,EAA0C,YAAM;AAAE,kBAAKR,EAAL;AAAe,SAAjE;AACA,aAAKR,SAAL,CAAec,EAAf,CAAkBvB,GAAGQ,IAAH,CAAQgB,SAAR,CAAkBC,WAApC,EAAiD,YAAM;AAAE,kBAAKR,EAAL;AAAe,SAAxE;AACA,aAAKP,KAAL,CAAWgB,IAAX,CAAgBH,EAAhB,CAAmBvB,GAAGQ,IAAH,CAAQgB,SAAR,CAAkBC,WAArC,EAAkD,YAAM;AAAE,kBAAKR,EAAL;AAAe,SAAzE;AACA,aAAKL,aAAL,CAAmBc,IAAnB,CAAwBH,EAAxB,CAA2BvB,GAAGQ,IAAH,CAAQgB,SAAR,CAAkBC,WAA7C,EAA0D,YAAM;AAAE,kBAAKR,EAAL;AAAe,SAAjF;AACH,KAnDI;AAoDLU,aAAS,mBAAY;AACjB,aAAKT,QAAL,GAAgB,IAAhB;AACA,aAAKU,QAAL;AACH,KAvDI;AAwDLC,aAAS,mBAAY;AACjB,aAAKX,QAAL,GAAgB,KAAhB;AACA,aAAKU,QAAL;AACH,KA3DI;AA4DLE,eAAW,qBAAY;AACnB,eAAO,KAAKZ,QAAZ;AACH,KA9DI;AA+DLU,cAAU,oBAAY;AAClB,aAAKlB,KAAL,CAAWgB,IAAX,CAAgBK,MAAhB,GAAyB,CAAC,KAAKb,QAA/B;AACA,aAAKN,aAAL,CAAmBc,IAAnB,CAAwBK,MAAxB,GAAiC,KAAKb,QAAtC;AACA,aAAKT,SAAL,CAAesB,MAAf,GAAwB,KAAKb,QAA7B;AACH,KAnEI;AAoELc,SApEK,mBAoEG,CAEP;AAtEI;;AAwEL;AAxEJ","file":"Toggle.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        bg: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        checkmark: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        title: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        checked_title: {\r\n            default: null,\r\n            type: cc.Label\r\n        }\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    init: function (bg_sprite, checkmark_sprite, content, cb) {\r\n        this._checked = false\r\n        this.content = content\r\n        this.cb = cb\r\n        this.bg.getComponent(cc.Sprite).spriteFrame = bg_sprite\r\n        this.checkmark.getComponent(cc.Sprite).spriteFrame = checkmark_sprite\r\n        this.title.string = content.content\r\n        this.checked_title.string = content.content\r\n        this.bg.on(cc.Node.EventType.TOUCH_START, () => { this.cb(this) })\r\n        this.checkmark.on(cc.Node.EventType.TOUCH_START, () => { this.cb(this) })\r\n        this.title.node.on(cc.Node.EventType.TOUCH_START, () => { this.cb(this) })\r\n        this.checked_title.node.on(cc.Node.EventType.TOUCH_START, () => { this.cb(this) })\r\n    },\r\n    checked: function () {\r\n        this._checked = true\r\n        this._refresh()\r\n    },\r\n    uncheck: function () {\r\n        this._checked = false\r\n        this._refresh()\r\n    },\r\n    isChecked: function () {\r\n        return this._checked\r\n    },\r\n    _refresh: function () {\r\n        this.title.node.active = !this._checked\r\n        this.checked_title.node.active = this._checked\r\n        this.checkmark.active = this._checked\r\n    },\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n\r\n"]}